// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Protege_PYA.Models;

#nullable disable

namespace Protege_PYA.Migrations
{
    [DbContext(typeof(ProtegePyaContext))]
    partial class ProtegePyaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Protege_PYA.Models.Actividade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Tipo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("URL");

                    b.HasKey("Id")
                        .HasName("PK__Activida__3214EC07CE441386");

                    b.ToTable("Actividades");
                });

            modelBuilder.Entity("Protege_PYA.Models.Administrador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Pass")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Usuario")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Administ__3214EC07FD3A452D");

                    b.ToTable("Administrador", (string)null);
                });

            modelBuilder.Entity("Protege_PYA.Models.Archivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Extension")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("URL");

                    b.HasKey("Id")
                        .HasName("PK__Archivos__3214EC077068905A");

                    b.ToTable("Archivos");
                });

            modelBuilder.Entity("Protege_PYA.Models.Charla", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Asistir")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaHora")
                        .HasColumnType("datetime");

                    b.Property<string>("LinkMeet")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Charlas__3214EC077CE169D1");

                    b.ToTable("Charlas");
                });

            modelBuilder.Entity("Protege_PYA.Models.Conversacione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("FechaInicio")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Usuario1id")
                        .HasColumnType("int");

                    b.Property<int?>("Usuario2id")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Conversa__3214EC07E023CB58");

                    b.HasIndex("Usuario1id");

                    b.HasIndex("Usuario2id");

                    b.ToTable("Conversaciones");
                });

            modelBuilder.Entity("Protege_PYA.Models.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("ProfesionalId")
                        .HasColumnType("int")
                        .HasColumnName("Profesional_id");

                    b.Property<string>("Titulo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("Usuario_id");

                    b.HasKey("Id")
                        .HasName("PK__Evento__3214EC0723B98C43");

                    b.HasIndex("ProfesionalId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Evento", (string)null);
                });

            modelBuilder.Entity("Protege_PYA.Models.HistoriasCuento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Autor")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descripcion")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("FormatoImagen")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("Imagen")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("URL");

                    b.HasKey("Id")
                        .HasName("PK__Historia__3214EC07CF81D817");

                    b.ToTable("HistoriasCuentos");
                });

            modelBuilder.Entity("Protege_PYA.Models.Mensaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConversacionId")
                        .HasColumnType("int")
                        .HasColumnName("Conversacion_id");

                    b.Property<string>("FechaEnvio")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("Leido")
                        .HasColumnType("bit");

                    b.Property<string>("Mensaje1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Mensaje");

                    b.Property<int?>("RemitenteId")
                        .HasColumnType("int")
                        .HasColumnName("Remitente_id");

                    b.HasKey("Id")
                        .HasName("PK__Mensajes__3214EC0764525347");

                    b.HasIndex("ConversacionId");

                    b.HasIndex("RemitenteId");

                    b.ToTable("Mensajes");
                });

            modelBuilder.Entity("Protege_PYA.Models.Profesionale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Especialidad")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<byte[]>("Imagen")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ImagenMimeType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Informacion")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Profesio__3214EC075CE17482");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Profesionales");
                });

            modelBuilder.Entity("Protege_PYA.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Rol")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Roles__3214EC071A639E9F");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Protege_PYA.Models.Sesione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_inicio");

                    b.Property<DateTime?>("FechaUltimaActividad")
                        .HasColumnType("datetime")
                        .HasColumnName("Fecha_ultima_actividad");

                    b.Property<string>("Token")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int")
                        .HasColumnName("Usuario_id");

                    b.HasKey("Id")
                        .HasName("PK__Sesiones__3214EC07544396BA");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Sesiones");
                });

            modelBuilder.Entity("Protege_PYA.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Documento")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_nacimiento");

                    b.Property<int?>("Intentos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Pass")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("Rol_id");

                    b.Property<string>("Usuario1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Usuario");

                    b.HasKey("Id")
                        .HasName("PK__Usuario__3214EC07C182AB71");

                    b.HasIndex("RolId");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Protege_PYA.Models.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("FechaSubida")
                        .HasColumnType("date");

                    b.Property<string>("Titulo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("URL");

                    b.HasKey("Id")
                        .HasName("PK__Videos__3214EC07192FFC9E");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("Protege_PYA.Models.Conversacione", b =>
                {
                    b.HasOne("Protege_PYA.Models.Usuario", "Usuario1")
                        .WithMany("ConversacioneUsuario1s")
                        .HasForeignKey("Usuario1id")
                        .HasConstraintName("Usuarios_1_F");

                    b.HasOne("Protege_PYA.Models.Usuario", "Usuario2")
                        .WithMany("ConversacioneUsuario2s")
                        .HasForeignKey("Usuario2id")
                        .HasConstraintName("Usuarios_2_F");

                    b.Navigation("Usuario1");

                    b.Navigation("Usuario2");
                });

            modelBuilder.Entity("Protege_PYA.Models.Evento", b =>
                {
                    b.HasOne("Protege_PYA.Models.Profesionale", "Profesional")
                        .WithMany("Eventos")
                        .HasForeignKey("ProfesionalId")
                        .HasConstraintName("Profesional_FK");

                    b.HasOne("Protege_PYA.Models.Usuario", "Usuario")
                        .WithMany("Eventos")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("Usuario_FK");

                    b.Navigation("Profesional");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Protege_PYA.Models.Mensaje", b =>
                {
                    b.HasOne("Protege_PYA.Models.Conversacione", "Conversacion")
                        .WithMany("Mensajes")
                        .HasForeignKey("ConversacionId")
                        .HasConstraintName("FK_Conversacion");

                    b.HasOne("Protege_PYA.Models.Usuario", "Remitente")
                        .WithMany("Mensajes")
                        .HasForeignKey("RemitenteId")
                        .HasConstraintName("FK_Remitente");

                    b.Navigation("Conversacion");

                    b.Navigation("Remitente");
                });

            modelBuilder.Entity("Protege_PYA.Models.Profesionale", b =>
                {
                    b.HasOne("Protege_PYA.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Protege_PYA.Models.Sesione", b =>
                {
                    b.HasOne("Protege_PYA.Models.Usuario", "Usuario")
                        .WithMany("Sesiones")
                        .HasForeignKey("UsuarioId")
                        .HasConstraintName("FK_Usuario");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Protege_PYA.Models.Usuario", b =>
                {
                    b.HasOne("Protege_PYA.Models.Role", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .HasConstraintName("FK_Rol");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("Protege_PYA.Models.Conversacione", b =>
                {
                    b.Navigation("Mensajes");
                });

            modelBuilder.Entity("Protege_PYA.Models.Profesionale", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("Protege_PYA.Models.Role", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Protege_PYA.Models.Usuario", b =>
                {
                    b.Navigation("ConversacioneUsuario1s");

                    b.Navigation("ConversacioneUsuario2s");

                    b.Navigation("Eventos");

                    b.Navigation("Mensajes");

                    b.Navigation("Sesiones");
                });
#pragma warning restore 612, 618
        }
    }
}
